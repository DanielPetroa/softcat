# Generated by Django 5.2.3 on 2025-07-17 20:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geometries', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PayoutOption',
            fields=[
                ('id_payout_option', models.AutoField(primary_key=True, serialize=False)),
                ('trigger_type', models.CharField(choices=[('threshold', 'Threshold'), ('index', 'Index'), ('parametric', 'Parametric'), ('cumulative', 'Cumulative'), ('binary', 'Binary')], help_text='Type of trigger mechanism for payout', max_length=100, verbose_name='Trigger Type')),
                ('int_var', models.CharField(help_text='Variable to monitor (e.g., wind_speed, precipitation, magnitude)', max_length=100, verbose_name='Variable')),
                ('int_val1', models.DecimalField(decimal_places=2, help_text='Primary threshold value for trigger', max_digits=10, verbose_name='Threshold Value 1')),
                ('int_val2', models.DecimalField(blank=True, decimal_places=2, help_text='Secondary threshold value (optional)', max_digits=10, null=True, verbose_name='Threshold Value 2')),
                ('filter_var', models.CharField(blank=True, help_text='Additional variable for filtering (optional)', max_length=100, verbose_name='Filter Variable')),
                ('filter_value', models.CharField(blank=True, help_text='Value for filter condition', max_length=100, verbose_name='Filter Value')),
                ('filter_condition', models.CharField(blank=True, choices=[('>=', 'Greater than or equal'), ('<=', 'Less than or equal'), ('==', 'Equal to'), ('>', 'Greater than'), ('<', 'Less than'), ('!=', 'Not equal to')], help_text='Condition for filter evaluation', max_length=50, verbose_name='Filter Condition')),
                ('payout_percent_limit1', models.DecimalField(decimal_places=2, help_text='Percentage of limit for first tier (0-100)', max_digits=5, verbose_name='Payout Percentage 1 (%)')),
                ('payout_percent_limit2', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of limit for second tier (optional)', max_digits=5, null=True, verbose_name='Payout Percentage 2 (%)')),
                ('payout_method_by_geom', models.CharField(choices=[('area_based', 'Area Based'), ('fixed', 'Fixed Amount'), ('scaled', 'Scaled'), ('percentage', 'Percentage'), ('tiered', 'Tiered')], help_text='Method for calculating payout based on geometry', max_length=100, verbose_name='Payout Method')),
                ('activo', models.BooleanField(default=True, help_text='Whether this payout option is active', verbose_name='Active')),
                ('creado_en', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('actualizado_en', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id_geometria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payout_options', to='geometries.geometria', verbose_name='Geometry')),
            ],
            options={
                'verbose_name': 'Payout Option',
                'verbose_name_plural': 'Payout Options',
                'db_table': 'payout_options',
                'ordering': ['-creado_en'],
            },
        ),
    ]
